
OLED.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000002d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000027c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000002d0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000300  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  00000340  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000e02  00000000  00000000  00000398  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007b1  00000000  00000000  0000119a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000584  00000000  00000000  0000194b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b4  00000000  00000000  00001ed0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003f4  00000000  00000000  00001f84  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000389  00000000  00000000  00002378  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  00002701  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 24 01 	call	0x248	; 0x248 <main>
  78:	0c 94 3c 01 	jmp	0x278	; 0x278 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <ssd1306_command>:
	ssd1306_command(128); // time interval
	ssd1306_command(endrow); //end page
	ssd1306_command(0);
	ssd1306_command(0Xff);
	ssd1306_command(0x2F); // activate scroll
}
  80:	45 9a       	sbi	0x08, 5	; 8
  82:	44 98       	cbi	0x08, 4	; 8
  84:	45 98       	cbi	0x08, 5	; 8
  86:	28 e0       	ldi	r18, 0x08	; 8
  88:	30 e0       	ldi	r19, 0x00	; 0
  8a:	90 e8       	ldi	r25, 0x80	; 128
  8c:	2d 98       	cbi	0x05, 5	; 5
  8e:	48 2f       	mov	r20, r24
  90:	49 23       	and	r20, r25
  92:	11 f0       	breq	.+4      	; 0x98 <ssd1306_command+0x18>
  94:	2b 9a       	sbi	0x05, 3	; 5
  96:	01 c0       	rjmp	.+2      	; 0x9a <ssd1306_command+0x1a>
  98:	2b 98       	cbi	0x05, 3	; 5
  9a:	2d 9a       	sbi	0x05, 5	; 5
  9c:	96 95       	lsr	r25
  9e:	21 50       	subi	r18, 0x01	; 1
  a0:	31 09       	sbc	r19, r1
  a2:	a1 f7       	brne	.-24     	; 0x8c <ssd1306_command+0xc>
  a4:	45 9a       	sbi	0x08, 5	; 8
  a6:	08 95       	ret

000000a8 <displayinit>:
  a8:	cf 93       	push	r28
  aa:	c8 2f       	mov	r28, r24
  ac:	8f ef       	ldi	r24, 0xFF	; 255
  ae:	84 b9       	out	0x04, r24	; 4
  b0:	87 b9       	out	0x07, r24	; 7
  b2:	8f e3       	ldi	r24, 0x3F	; 63
  b4:	9c e9       	ldi	r25, 0x9C	; 156
  b6:	01 97       	sbiw	r24, 0x01	; 1
  b8:	f1 f7       	brne	.-4      	; 0xb6 <displayinit+0xe>
  ba:	00 c0       	rjmp	.+0      	; 0xbc <displayinit+0x14>
  bc:	00 00       	nop
  be:	43 9a       	sbi	0x08, 3	; 8
  c0:	9f ef       	ldi	r25, 0xFF	; 255
  c2:	21 ee       	ldi	r18, 0xE1	; 225
  c4:	84 e0       	ldi	r24, 0x04	; 4
  c6:	91 50       	subi	r25, 0x01	; 1
  c8:	20 40       	sbci	r18, 0x00	; 0
  ca:	80 40       	sbci	r24, 0x00	; 0
  cc:	e1 f7       	brne	.-8      	; 0xc6 <displayinit+0x1e>
  ce:	00 c0       	rjmp	.+0      	; 0xd0 <displayinit+0x28>
  d0:	00 00       	nop
  d2:	43 98       	cbi	0x08, 3	; 8
  d4:	9f ef       	ldi	r25, 0xFF	; 255
  d6:	21 ee       	ldi	r18, 0xE1	; 225
  d8:	84 e0       	ldi	r24, 0x04	; 4
  da:	91 50       	subi	r25, 0x01	; 1
  dc:	20 40       	sbci	r18, 0x00	; 0
  de:	80 40       	sbci	r24, 0x00	; 0
  e0:	e1 f7       	brne	.-8      	; 0xda <displayinit+0x32>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <displayinit+0x3c>
  e4:	00 00       	nop
  e6:	43 9a       	sbi	0x08, 3	; 8
  e8:	9f ef       	ldi	r25, 0xFF	; 255
  ea:	21 ee       	ldi	r18, 0xE1	; 225
  ec:	84 e0       	ldi	r24, 0x04	; 4
  ee:	91 50       	subi	r25, 0x01	; 1
  f0:	20 40       	sbci	r18, 0x00	; 0
  f2:	80 40       	sbci	r24, 0x00	; 0
  f4:	e1 f7       	brne	.-8      	; 0xee <displayinit+0x46>
  f6:	00 c0       	rjmp	.+0      	; 0xf8 <displayinit+0x50>
  f8:	00 00       	nop
  fa:	8e ea       	ldi	r24, 0xAE	; 174
  fc:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 100:	85 ed       	ldi	r24, 0xD5	; 213
 102:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 106:	80 e8       	ldi	r24, 0x80	; 128
 108:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 10c:	88 ea       	ldi	r24, 0xA8	; 168
 10e:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 112:	8f e3       	ldi	r24, 0x3F	; 63
 114:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 118:	83 ed       	ldi	r24, 0xD3	; 211
 11a:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 11e:	80 e0       	ldi	r24, 0x00	; 0
 120:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 124:	80 e4       	ldi	r24, 0x40	; 64
 126:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 12a:	8d e8       	ldi	r24, 0x8D	; 141
 12c:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 130:	c1 30       	cpi	r28, 0x01	; 1
 132:	11 f5       	brne	.+68     	; 0x178 <displayinit+0xd0>
 134:	80 e1       	ldi	r24, 0x10	; 16
 136:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 13a:	80 e2       	ldi	r24, 0x20	; 32
 13c:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 140:	80 e0       	ldi	r24, 0x00	; 0
 142:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 146:	81 ea       	ldi	r24, 0xA1	; 161
 148:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 14c:	88 ec       	ldi	r24, 0xC8	; 200
 14e:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 152:	8a ed       	ldi	r24, 0xDA	; 218
 154:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 158:	82 e1       	ldi	r24, 0x12	; 18
 15a:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 15e:	81 e8       	ldi	r24, 0x81	; 129
 160:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 164:	8f e9       	ldi	r24, 0x9F	; 159
 166:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 16a:	89 ed       	ldi	r24, 0xD9	; 217
 16c:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 170:	82 e2       	ldi	r24, 0x22	; 34
 172:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 176:	21 c0       	rjmp	.+66     	; 0x1ba <displayinit+0x112>
 178:	84 e1       	ldi	r24, 0x14	; 20
 17a:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 17e:	80 e2       	ldi	r24, 0x20	; 32
 180:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 184:	80 e0       	ldi	r24, 0x00	; 0
 186:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 18a:	81 ea       	ldi	r24, 0xA1	; 161
 18c:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 190:	88 ec       	ldi	r24, 0xC8	; 200
 192:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 196:	8a ed       	ldi	r24, 0xDA	; 218
 198:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 19c:	82 e1       	ldi	r24, 0x12	; 18
 19e:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 1a2:	81 e8       	ldi	r24, 0x81	; 129
 1a4:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 1a8:	8f ec       	ldi	r24, 0xCF	; 207
 1aa:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 1ae:	89 ed       	ldi	r24, 0xD9	; 217
 1b0:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 1b4:	81 ef       	ldi	r24, 0xF1	; 241
 1b6:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 1ba:	8b ed       	ldi	r24, 0xDB	; 219
 1bc:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 1c0:	80 e4       	ldi	r24, 0x40	; 64
 1c2:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 1c6:	84 ea       	ldi	r24, 0xA4	; 164
 1c8:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 1cc:	86 ea       	ldi	r24, 0xA6	; 166
 1ce:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 1d2:	8e e2       	ldi	r24, 0x2E	; 46
 1d4:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 1d8:	8f ea       	ldi	r24, 0xAF	; 175
 1da:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 1de:	cf 91       	pop	r28
 1e0:	08 95       	ret

000001e2 <displaybegin>:
 1e2:	cf 93       	push	r28
 1e4:	df 93       	push	r29
 1e6:	d8 2f       	mov	r29, r24
 1e8:	c6 2f       	mov	r28, r22
 1ea:	81 e2       	ldi	r24, 0x21	; 33
 1ec:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 1f0:	8d 2f       	mov	r24, r29
 1f2:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 1f6:	8f e7       	ldi	r24, 0x7F	; 127
 1f8:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 1fc:	82 e2       	ldi	r24, 0x22	; 34
 1fe:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 202:	8c 2f       	mov	r24, r28
 204:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 208:	87 e0       	ldi	r24, 0x07	; 7
 20a:	0e 94 40 00 	call	0x80	; 0x80 <ssd1306_command>
 20e:	45 9a       	sbi	0x08, 5	; 8
 210:	44 9a       	sbi	0x08, 4	; 8
 212:	45 98       	cbi	0x08, 5	; 8
 214:	df 91       	pop	r29
 216:	cf 91       	pop	r28
 218:	08 95       	ret

0000021a <displayend>:
 21a:	45 9a       	sbi	0x08, 5	; 8
 21c:	08 95       	ret

0000021e <displayclear>:
 21e:	60 e0       	ldi	r22, 0x00	; 0
 220:	80 e0       	ldi	r24, 0x00	; 0
 222:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <displaybegin>
 226:	20 e0       	ldi	r18, 0x00	; 0
 228:	34 e0       	ldi	r19, 0x04	; 4
 22a:	08 c0       	rjmp	.+16     	; 0x23c <displayclear+0x1e>
 22c:	2d 98       	cbi	0x05, 5	; 5
 22e:	2b 98       	cbi	0x05, 3	; 5
 230:	2d 9a       	sbi	0x05, 5	; 5
 232:	01 97       	sbiw	r24, 0x01	; 1
 234:	d9 f7       	brne	.-10     	; 0x22c <displayclear+0xe>
 236:	21 50       	subi	r18, 0x01	; 1
 238:	31 09       	sbc	r19, r1
 23a:	19 f0       	breq	.+6      	; 0x242 <displayclear+0x24>
 23c:	88 e0       	ldi	r24, 0x08	; 8
 23e:	90 e0       	ldi	r25, 0x00	; 0
 240:	f5 cf       	rjmp	.-22     	; 0x22c <displayclear+0xe>
 242:	0e 94 0d 01 	call	0x21a	; 0x21a <displayend>
 246:	08 95       	ret

00000248 <main>:
#include <avr/io.h>
#include "MySSD1306.c"

int main(void)
{
	displayinit(SSD1306_SWITCHCAPVCC);
 248:	82 e0       	ldi	r24, 0x02	; 2
 24a:	0e 94 54 00 	call	0xa8	; 0xa8 <displayinit>
	displayclear();
 24e:	0e 94 0f 01 	call	0x21e	; 0x21e <displayclear>
	displaybegin(0,0);
 252:	60 e0       	ldi	r22, 0x00	; 0
 254:	80 e0       	ldi	r24, 0x00	; 0
 256:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <displaybegin>
 25a:	9f ef       	ldi	r25, 0xFF	; 255
 25c:	07 c0       	rjmp	.+14     	; 0x26c <main+0x24>

void inline fastSPIwrite(uint8_t d) {

  for (uint8_t bit = 0x80; bit; bit >>= 1)
  {
    LPORT(_CLKP, _CLK);
 25e:	2d 98       	cbi	0x05, 5	; 5

    if (d & bit)
      HPORT(_MOSIP, _MOSI);
 260:	2b 9a       	sbi	0x05, 3	; 5
    else
      LPORT(_MOSIP, _MOSI);
    HPORT(_CLKP, _CLK);
 262:	2d 9a       	sbi	0x05, 5	; 5

}

void inline fastSPIwrite(uint8_t d) {

  for (uint8_t bit = 0x80; bit; bit >>= 1)
 264:	86 95       	lsr	r24
 266:	d9 f7       	brne	.-10     	; 0x25e <main+0x16>
 268:	91 50       	subi	r25, 0x01	; 1
	
	for (uint8_t i = 0;i<255; i++)
 26a:	19 f0       	breq	.+6      	; 0x272 <main+0x2a>
  {
    LPORT(_CLKP, _CLK);
 26c:	2d 98       	cbi	0x05, 5	; 5
 26e:	80 e8       	ldi	r24, 0x80	; 128
 270:	f7 cf       	rjmp	.-18     	; 0x260 <main+0x18>
	{
		fastSPIwrite(255);
	}
	displayend();
 272:	0e 94 0d 01 	call	0x21a	; 0x21a <displayend>
 276:	ff cf       	rjmp	.-2      	; 0x276 <main+0x2e>

00000278 <_exit>:
 278:	f8 94       	cli

0000027a <__stop_program>:
 27a:	ff cf       	rjmp	.-2      	; 0x27a <__stop_program>
